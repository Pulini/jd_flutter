plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace "com.jd.pzx.jd_flutter"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.jd.pzx.jd_flutter"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
//        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release

            // 启用代码混淆
            minifyEnabled true
            // 启用资源压缩
            shrinkResources true
            // 指定混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    //JDK编译异常处理
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:2.1.0"))
    implementation 'androidx.multidex:multidex:2.0.1'

    //json解析 https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.11.0'
    //华为HMS 静默活体验证 https://developer.huawei.com/consumer/cn/doc/hiai-Guides/liveness-detection-sdk-0000001052704932
    implementation 'com.huawei.hms:ml-computer-vision-livenessdetection:3.11.0.301'
    //华为HMS 人脸比对 https://developer.huawei.com/consumer/cn/doc/hiai-Guides/faceverify-sdk-0000001071768039
    implementation 'com.huawei.hms:ml-computer-vision-faceverify:3.11.0.302'
    implementation 'com.huawei.hms:ml-computer-vision-faceverify-model:3.11.0.302'
    //lottie动画 https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:6.3.0'
    //485串口 https://github.com/licheedev/Android-SerialPort-API
    implementation 'com.licheedev:android-serialport:2.1.4'
    implementation files('libs/pl2303g_multilib.jar')
    implementation 'androidx.print:print:1.1.0'
}